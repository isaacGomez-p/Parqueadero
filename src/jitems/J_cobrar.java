package jitems;

import ConexionBD.Conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import vehiculo.Cliente;
import vehiculo.Cobrar_tabla;
import vehiculo.Genera_vehiculo;

/**
 *
 * @author ISAACELEAZAR
 */
public class J_cobrar extends javax.swing.JFrame {
    
    Boolean cl = false;
    Cliente nuevo;
    SimpleDateFormat formateador = new SimpleDateFormat("dd/MM/yyyy");
    Genera_vehiculo obj4 = new Genera_vehiculo();
    Cobrar_tabla row;
    Conexion bd = new Conexion("postgres","admin");    
    Connection con=null;
    Statement stmt=null;
    ResultSet rs=null;
    String ubc;
    public int idVal=0;
    /**
     * Creates new form J_cobrar
     */
    public J_cobrar(){
        this.con=bd.con();
        this.stmt=bd.stamt();
        initComponents();
        this.getContentPane().setBackground(Color.DARK_GRAY);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Tplaca = new javax.swing.JTextField();
        Bsearch = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ingrese la placa:");

        Bsearch.setBackground(new java.awt.Color(255, 255, 51));
        Bsearch.setForeground(new java.awt.Color(204, 0, 0));
        Bsearch.setText("Buscar");
        Bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsearchActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 0));
        jButton1.setForeground(new java.awt.Color(51, 51, 0));
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Gungsuh", 1, 36)); // NOI18N
        jLabel2.setForeground(java.awt.Color.yellow);
        jLabel2.setText("PAR-KING ");
        jLabel2.setAlignmentX(0.5F);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/i dotn know.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/i dotn know.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Bsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(Tplaca, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Tplaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(Bsearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void borraBD(){
        String pl = Tplaca.getText();
        String qry = "DELETE FROM vehiculo_ingreso WHERE placa = '"+pl+"';";
        try{
            stmt.executeUpdate(qry);
            //JOptionPane.showMessageDialog(this,"Datos borrados de la base de datos.","Correcto",JOptionPane.NO_OPTION);
        }catch(SQLDataException e){
            System.out.printf("Error al borrar");
        } catch (SQLException ex) {
            Logger.getLogger(Jingreso_de_carros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void insertaBD_2(){
        String qry ="INSERT INTO vehiculo_salida (placa,ubicacion,hora_salida,fecha_salida)VALUES ('"+row.getPlaca()+"','"+this.ubc+"','"+obj4.get_hora()+"','"+row.getFecha_ac()+"')";
        try{
            stmt.executeUpdate(qry);
            //JOptionPane.showMessageDialog(this,"Datos ingresados en la base de datos.","Correcto",JOptionPane.NO_OPTION);
        }catch(SQLDataException e){
            System.out.printf("Error al grabar");
        } catch (SQLException ex) {
            Logger.getLogger(Jingreso_de_carros.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void obtieneLlave(){
        String qry = "SELECT max(idvalor) FROM cobrar;";
        try{
           rs=stmt.executeQuery(qry);
                     
        }catch(SQLDataException e){
            System.out.printf("Error al grabar");
        } catch (SQLException ex) {
            Logger.getLogger(J_cobrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(rs.next()){
                 idVal = rs.getInt("max");
                 
                 System.out.println("Ultimo id:"+this.idVal);
            }
        } catch (SQLException ex) {
            
            Logger.getLogger(J_cobrar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void insertaBD(){
        this.obtieneLlave();
        int a = this.idVal;
         String qry ="INSERT INTO cobrar (placa,tiempo,valor,idvalor,fecha_cobro)VALUES ('"+row.getPlaca()+"','"+row.getTiempo()+"','"+row.getValor()+"','"+(this.idVal+1)+"','"+row.getFecha_ac()+"')";
        try{
            stmt.executeUpdate(qry);
            //JOptionPane.showMessageDialog(this,"Datos ingresados en la base de datos.","Correcto",JOptionPane.NO_OPTION);
        }catch(SQLDataException e){
            System.out.printf("Error al grabar");
        } catch (SQLException ex) {
            Logger.getLogger(Jingreso_de_carros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void buscaCliente(String p){
       String qry= "SELECT * FROM cliente WHERE placa ='"+p+"';";
        try{
           rs=stmt.executeQuery(qry);
        }
        catch(SQLDataException e){
            System.out.printf("Error en la búsqueda.");
        }
        catch (SQLException ex) {
            Logger.getLogger(J_cobrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if(rs.wasNull()){
                JOptionPane.showMessageDialog(this,"Error4545 ","Cliente no encontrado rs null",JOptionPane.ERROR_MESSAGE);
            }else{
            while(rs.next()){
                 JOptionPane.showMessageDialog(this,"Cliente encontrado: "+rs.getString("nombre")+" y la placa es: "+rs.getString("placa"),"Cliente encontrado.",JOptionPane.OK_OPTION);   
                 cl = true;
                 System.out.println("Cliente "+rs.getString("nombre"));
            }
        }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error "+ex,"Cliente no encontrado",JOptionPane.ERROR_MESSAGE);
            cl = false;
            Logger.getLogger(J_cobrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void BsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsearchActionPerformed
        // TODO add your handling code here:
        String pl_ = Tplaca.getText();
        String pl = pl_.toUpperCase();
        System.out.println("PLACAAAAAAAAAAAAAAAA: "+pl);
        String a = new String();
        Time hora_e = null, hora_a;
        LocalTime hora_a_a, hora_e_e;
        Date fecha = null;
        this.buscaCliente(pl);
        String qry= "SELECT * FROM vehiculo_ingreso WHERE placa ='"+pl+"';";
        try{
           rs=stmt.executeQuery(qry); 
        }catch(SQLDataException e){
            System.out.printf("Error en la búsqueda.");
        } catch (SQLException ex) {
            Logger.getLogger(J_cobrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(rs.next()){
                 a= rs.getString("placa");
                 hora_e = rs.getTime("hora_ingreso");
                 System.out.println("hora_e"+hora_e);
                 ubc = rs.getString("ubicacion");
            }
        } catch (SQLException ex) {
            Logger.getLogger(J_cobrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
        LocalDateTime ahora = LocalDateTime.now();
        System.out.println("Son las: "+ahora.getHour()+":"+ahora.getMinute()+":"+ahora.getSecond());
        String actual = obj4.get_hora();
        System.out.println("PASA ACTUAL:"+actual);
        hora_a = Time.valueOf(actual);
        
        
        hora_a_a = LocalTime.parse(actual);
               
        String lc = hora_e.toString();
        hora_e_e = LocalTime.parse(lc);
        JOptionPane.showMessageDialog(this,"Placa: "+a+"\nUbicacion:"+ubc+"\nHora de salida:"+hora_a,"Su vehiculo:",JOptionPane.OK_OPTION);
        
        System.out.println("CLIENTE O NO"+cl);
        Integer valor = null, tiempo;
        tiempo = hora_a_a.toSecondOfDay()-hora_e_e.toSecondOfDay();
        if(cl == false){
        valor = (hora_a_a.toSecondOfDay()-hora_e_e.toSecondOfDay())*6;}
        else if(cl == true){
            valor = (tiempo*6)-((tiempo*6)/10);
        }
        System.out.println("Le cuesta: "+valor);
        String fe = obj4.get_fecha();
        try {
            fecha = (Date) formateador.parse(fe);
        } catch (ParseException ex) {
            Logger.getLogger(Jingreso_de_carros.class.getName()).log(Level.SEVERE, null, ex);
        }
        row = new Cobrar_tabla(a,tiempo,valor,fecha);        
        String recibo = "Placa: "+a+"\n\nHora Entrada: "+lc+"\n\nHora Salida: "+actual+"\n\nValor: "+valor+"\n¡Gracias por utilizar nuestro servicio!";
        System.out.println(recibo);
        Recibo_pago ob5 = new Recibo_pago(recibo,a,fe);
        ob5.setVisible(true);
        ob5.setLocationRelativeTo(null);
        
        this.insertaBD();
        this.insertaBD_2();
        this.borraBD();
        this.setVisible(false);}
        catch(java.lang.NullPointerException e3){
            JOptionPane.showMessageDialog(this,"Vehículo no registra en el parqueadero.","",JOptionPane.OK_OPTION);
        }
        //}
    }//GEN-LAST:event_BsearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Jinicio vuelve = new Jinicio();
        vuelve.setVisible(true);
        vuelve.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(J_cobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(J_cobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(J_cobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(J_cobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bsearch;
    private javax.swing.JTextField Tplaca;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
